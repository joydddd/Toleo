#include zen4_s

[system/addr_trans]
enable = true
page_size = 4 # in KB
page_offset = 12 # =4KB

[perf_model/cxl]
enable = true
num_memory_expanders = 1
queue_type = windowed_mg1
pkt_size = 64 # in bytes
type = dram


[perf_model/cxl/memory_expander_0] # starting from 0
# CXL access time excluding core-LLC
# #Pond#
# /wo retimer: 25ns (CXL port) + 5ns (CXL bus) + 25ns (CXL port) + 15ns (ACL NOC) + 45ns (DDR) = 115 ns
# /w retimer:  25ns (CXL port) + 30ns (CXL bus + retimer) + 25ns (CXL port) + 15ns (ACL NOC) + 45ns (DDR) = 140 ns

# Theoretical Achievable BW from Intel: 50.7 R, 25.3 W
# 1/4 for scaling down. 
latency = 95 # in ns, cxl access latency overhead
bandwidth = 12.7 # in GB/s
cxl_cntlr_node = 0
size = 768 # in GB 128GB/dimm, 2 dimms/ch, 3 chs


[perf_model/cxl/memory_expander_0/dram]
type = dramsim
num_controllers = 4 # 1 memory controllers
default_latency = 45

[perf_model/cxl/memory_expander_0/dram/dramsim]
# TODO: use DDR5_4800 config
config=DDR4_8Gb_x16_3200
channles_per_contoller= 3
epoch=10000
output_dir=.
frequency=1600 # in MHz  = MT/s / 2
window_size = 1000 # in transactions


# # DEBUG:
# # Constant dram setup
# [perf_model/cxl/memory_expander_0/dram]
# per_controller_size = 768 # in GB
# type = constant
# num_controllers = 1                     
# latency = 45                                # In nanoseconds
# per_controller_bandwidth = 76.8             # In GB/s


[perf_model/cxl/memory_expander_0/dram/queue_model]
enabled = true
type = windowed_mg1
bp_factor = 1.5


[perf_model/cxl/vnserver]
enable = false